/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 pawn.glb 
*/
import { useRef, useState } from 'react'
import {  useFrame, useThree } from '@react-three/fiber'

import { useGLTF } from '@react-three/drei'

export function Pawn(props) {
  const { nodes, materials } = useGLTF('assets/pawn.glb')
  const mesh = useRef()
  const { viewport } = useThree()
  const [hovered, setHover] = useState(false)
  const [active, setActive] = useState(0)
  // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))

  return (
    <group {...props} dispose={null}>
      <mesh
        ref={mesh}
        scale={(viewport.width / 5) * (active ? 1.5 : 1)}
        onClick={(e) => setActive((prev) => prev+10)}
        onPointerOver={(e) => setHover(true)}
        onPointerOut={(e) => setHover(false)}
        geometry={nodes.Cylinder.geometry} 
        material={materials.Pawn} 
        position={[active, 1.003, 0]} 
        />
      </group>

      )
    }
    // <mesh geometry={nodes.Plane.geometry} material={materials.Board} position={[-1.455, 0, -1.697]} scale={-37.648} />

useGLTF.preload('/pawn.glb')
